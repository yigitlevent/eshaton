[{"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Table.tsx":"1","C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Block.tsx":"2","C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\components\\CharacterSheet.tsx":"3","C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Divider.tsx":"4","C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\index.tsx":"5"},{"size":1425,"mtime":1606474264372,"results":"6","hashOfConfig":"7"},{"size":11460,"mtime":1606475065481,"results":"8","hashOfConfig":"7"},{"size":2827,"mtime":1606474269594,"results":"9","hashOfConfig":"7"},{"size":244,"mtime":1606461425099,"results":"10","hashOfConfig":"7"},{"size":2868,"mtime":1606475872703,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lrdnkc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Table.tsx",[],"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Block.tsx",[],"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\components\\CharacterSheet.tsx",[],"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\parts\\Divider.tsx",[],"C:\\Users\\Adramelech\\Documents\\GitHub\\eshaton\\client\\src\\index.tsx",["23"],"import { useEffect, useState, StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./style.scss\";\n\nimport { Login } from \"./components/Login\";\nimport { Register } from \"./components/Register\";\nimport { CharacterSheet } from \"./components/CharacterSheet\";\n\nfunction App(): JSX.Element {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(true);\n\tconst [isLogin, setIsLogin] = useState(true);\n\n\tconst [sheet, setSheet] = useState(\"none\" as sheettype);\n\tconst [campaign, setCampaign] = useState(\"none\" as campaigntype);\n\n\tconsole.log(process.env.)\n\n\tconst userRequest = (path: string, requestType: requests, data?: registrationform | loginform): void => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.open(\"POST\", path, true); // true = asynchronous\n\t\trequest.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\n\t\tif (data) { request.send(JSON.stringify(data)); }\n\t\telse { request.abort(); }\n\n\t\trequest.onreadystatechange = () => {\n\t\t\tif (request.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tconst response = JSON.parse(request.response);\n\n\t\t\t\tif (response.status === \"failure\") {\n\t\t\t\t\tconsole.log(response.message);\n\t\t\t\t}\n\t\t\t\telse if (requestType === \"login\" && response.status === \"success\") {\n\t\t\t\t\tconsole.log(response.message);\n\t\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\t\t// TODO: Login successful.\n\t\t\t\t\t// TODO: Load user campaigns and characters\n\t\t\t\t}\n\t\t\t\telse if (requestType === \"register\" && response.status === \"success\") {\n\t\t\t\t\tconsole.log(response.message);\n\t\t\t\t\tsetIsLogin(true);\n\t\t\t\t\t// TODO: Registration successful, please login.\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\n\t}, []);\n\n\treturn (\n\t\t<StrictMode>\n\t\t\t{(!isLoggedIn)\n\t\t\t\t? <div className=\"entrance-wrapper\">\n\t\t\t\t\t<div className=\"entrance\">\n\t\t\t\t\t\t<div className=\"logo\" />\n\t\t\t\t\t\t<div className=\"title\">ESHATON // ENTRANCE</div>\n\n\t\t\t\t\t\t{(isLogin)\n\t\t\t\t\t\t\t? <Login setIsLogin={setIsLogin} userRequest={userRequest} />\n\t\t\t\t\t\t\t: <Register setIsLogin={setIsLogin} userRequest={userRequest} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t: <div className=\"main-wrapper\">\n\n\t\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t\t<div className=\"logo\" />\n\t\t\t\t\t\t<div className=\"title\">ESHATON // DASHBOARD</div>\n\n\t\t\t\t\t\t<div className=\"my-characters\">\n\t\t\t\t\t\t\t<div className=\"title\">MY CHARACTERS</div>\n\t\t\t\t\t\t\t<input className=\"button\" type=\"button\" value=\"Create New Character\" onClick={() => { setSheet(\"new\"); }} />\n\t\t\t\t\t\t\t<div className=\"list\"></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"my-campaigns\">\n\t\t\t\t\t\t\t<div className=\"title\">MY CAMPAIGNS</div>\n\t\t\t\t\t\t\t<input className=\"button\" type=\"button\" value=\"Create New Campaign\" onClick={() => { setCampaign(\"new\"); }} />\n\t\t\t\t\t\t\t<div className=\"list\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{(sheet !== \"none\")\n\t\t\t\t\t\t? <CharacterSheet sheet={sheet} />\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\t\t\t}\n\t\t</StrictMode>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));",{"ruleId":null,"fatal":true,"severity":2,"message":"24","line":17,"column":25},"Parsing error: Identifier expected."]